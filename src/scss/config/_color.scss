/*
*   Define all colors used in the project
*   Create functions to use the colors throughout the project
*/

// A nested map containing colors and their variations
$colors: (
    'primary': (
        'base': #B53471,
        'light': #c3427f,
        'dark': #a02861,
        'text': #fff
    ),
    'accent': (
        'base': #43B544,
        'light': #6fce70,
        'dark': #308d30
    ),
    'background': (
        'base': #eeeeee,
        'light': #ffffff,
        'dark': #d2d2d2
    ),
    'text': (
        'base': #0e0d0e,
        'light': #3d3d3d,
        'dark': #111011
    ),
    'border': (
        'base': #cac7ca
    )
);


// Function to get a variant of a color
@function color(
    $name,
    $variant: 'base'
) {
    $color: null;
    
    $color-list: map-get($colors, $name);
    @if ($color-list) {
        $color: map-get($color-list, $variant);

        @if ($color) {
            @return $color;
        } @else {
            @error 'Could not find variant "#{$variant}" in #{$color}.';
        }
    } @else {
        @error 'Could not find color "#{$name}"';
    }
}

// Creates a gradient from the selected color
@function gradient($color, $deg: 0deg, $type: 'linear') {
    $color: map-get($colors, $color);

    @if ($color) {
        $light: map-get($color, 'light');
        $dark: map-get($color, 'dark');

        @return #{$type}-gradient(#{$deg}, #{$light}, #{$dark} );
    } @else {
        @error 'Can not find color "#{$color}".';
    }
}

// Usage 
.primary {
    color: color('primary', 'text');
    background: color('primary', 'light');
}

// Usage
.gradient {
    background: {
        color: color('primary');
        image: gradient('primary', 'to right');
    }
}